#!python

env = Environment()
pkgs = {
    "allegro-static-5":           "5.2.4",
    "allegro_font-static-5":      "5.2.4",
    "allegro_primitives-static-5":"5.2.4"
}
pkgConfigFlags = '--static'

def CheckPKGConfig(context, version):
    context.Message( 'Checking pkg-config...' )
    ret = context.TryAction('pkg-config --atleast-pkgconfig-version=%s' % version)[0]
    context.Result(ret)
    return ret

def CheckPKG(context, name):
    context.Message('Checking for %s... ' % name)
    ret = context.TryAction('pkg-config --exists \'%s\'' % name)[0]
    context.Result(ret)
    return ret

conf = Configure(env, custom_tests = {'CheckPKGConfig':CheckPKGConfig, 'CheckPKG':CheckPKG})

if not conf.CheckPKGConfig('0.29.1'):
    print 'pkg-config >= 0.29.1 not found.'
    Exit(1)

failed=False
pkgString=''

for pkg, vers in pkgs.iteritems():
    pkgString += pkg + ' '
    isGood = conf.CheckPKG(pkg + ' >= ' + vers)
    if not isGood:
        print 'Package %s version greater or equal to %s not found' % (pkg, vers)
        failed=True

if failed:
    Exit(1)

env = conf.Finish()

env.ParseConfig('pkg-config --cflags --libs ' + pkgConfigFlags + ' ' + pkgString)
env.Program(Glob('*.cpp'), CXXFLAGS='-g')